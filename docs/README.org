#+TITLE: Learning Doom and Vim

Vim is fundammentally built on command composability.

Vim favors small, general-purpose commands that can be combined with objects to
compose larger commands.

You know what improves productivity? *Mastering motions and operators.*

* Vim
- use the more general text objects (~iw~ rather than ~w~)
- prefer text objects over motions when possible
- visual mode is a smell because it breaks repeatability
- don't use two sentences where one will do it
- to avoid using Esc we can press ~C-[~ or ~jk~ in Doom
- history of past searches: ~q/~
- ~ctrl-^~ will send you back to the previous buffer you were in

** Anti-Patterns
*** If you are pressing the same key more than twice, you're doing it wrong
- You should either prefix a command with the number of times you want to repeat
it or look for a shorter command which does the same thing (there always is).

*** Moving one line at a time
- use relative line numbers instead. Using relative line numbers will tell you how
many lines above and below the cursor the other lines are. Knowing that you can
then use RELATIVE_NUMBER + j/k to jump straight to that line.
  - I removed all line numbers from Doom.
- / to search for a word is usually faster than moving the cursor.
- to move up/down multiple lines I then use ~CTRL+u~ and ~CTRL+d~.

*** Moving sideways one character at a time

- use ~f~ to move to a particular character (forward) and ~t~ to move to place right before a character (forward)
- use ~F~ and ~T~ to move backwards

*** Deleting text before inserting new text
*** Spending too much time in insert mode
*** Using / to search for the word under cursor
- Instead use * (to search forward) and # (to search backward)

*** Using macros for simple replacements
- Many people record a macro to change multiple lines when they could be using a
RegEx find and replace instead
- To invert a function's argument's order throughout all of a file's call, you could use:
  - :%s/myfun(\(.*\),\(.*\))/myfun(\2,\1)/g

* Dive in
There is no clear rationale for why each of the topics below are in separate
files other than my desired to study them deeper at some moment.

- [[file:doom.org][Doom]]
- [[file:vim-marks.org][Vim Marks]]
- [[file:vim-text-objects.org][Vim Text Objects]]
- [[file:vim-motions.org][Vim Motions]]
- [[file:vim-jumplist.org][Vim Jumplist]]
- [[file:vim-fold.org][Vim Fold]]
- [[file:vim-brackets.org][Vim Brackets]]
- [[file:vim-operators.org][Vim Operators]]
- [[file:vim-search.org][Vim Search]]
- [[file:vim-macros.org][Vim Macros]]
- [[file:vim-g-commands.org][Vim G Commands]]
- [[file:vim-registers.org][Vim Registers]]

If you have contributions, please open a PR.

* Works in Vim, but seems not to work on Doom [1/5]
- [ ] Global marks are preserved between sessions in Vim
- [ ] :help <doc-entry> ---- Vim docs not available :/
- [ ] :changes doesn't work
- [X] =[I= show lines with matching word under cursor
  - now, this binding will call =+vertico/search-symbol-at-point= function which
    is an improvement over Vim's default behavior due to interactivity
- [ ] the commands ='[=, and =']= does not work.
  - These are marks defined by Vim to jump to last yank/changed text
  - we can use ~goto-last-change~ or ~g;~ command though

* Vim Daily Tricks & Vim Tricks Twitter threads
 [[file:vim-daily-tricks.org][Page to follow Vim Daily Tips and Vim Tricks on twitter.]]

* Resources
- [[https://youtu.be/wlR5gYd6um0][Mastering the Vim Language ]]- Video by thoughtbot
- [[https://stackoverflow.com/questions/1218390/what-is-your-most-productive-shortcut-with-vim][Your problem with Vim is that you don't grok vi]] - StackOverflow answer
- [[https://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/][Learn Vim Progressively]]  - Yann Esposito blog post
- [[https://benmccormick.org/2014/07/02/learning-vim-in-2014-vim-as-language][Learning Vim as a Language]]  - Ben McCormick blog post
- [[https://medium.com/@mkozlows/why-atom-cant-replace-vim-433852f4b4d1][Why Atom can't replace Vim]] - Mike Kozlowski blog post
- [[https://medium.com/usevim/stop-the-vim-configuration-madness-c825578bbf3e][Stop the Vim configuration madness]]  - Alex R. Young blog post
- Best of Alex R. Young Medium activity:
  - [[https://medium.com/usevim/stop-the-vim-configuration-madness-c825578bbf3e][Stop the Vim configuration madness]]
  - [[https://medium.com/usevim/vim-101-quick-movement-c12889e759e0][Vim 101: Quick movement]]
  - [[https://medium.com/usevim/vim-101-search-and-replace-d1901619c2a6][Vim 101: Search and Replace]]
  - [[https://medium.com/usevim/vim-101-registers-f6ad105dfd89][Vim 101: Registers]]
- [[https://towardsdatascience.com/how-i-learned-to-enjoy-vim-e310e53e8d56][Deliberate Practice on Vim Surround]] - House Lin blog post
- [[http://zzapper.co.uk/vimtips.html][Best of Vim Tips]]  - Zzapper blog post
- [[https://www.youtube.com/watch?v=E-ZbrtoSuzw][Vim: Tutorial on Editing, Navigation, and File Management]]  - Leeren YT video
- [[https://github.com/niyumard/Doom-Emacs-Cheat-Sheet][Doom Emacs CheatSheet]] - Hossein Naghdbishi GB repo
- [[https://www.cs.swarthmore.edu/oldhelp/vim/home.html][vim tips and tricks]] - web page
- [[https://vim.fandom.com/wiki/Moving_lines_up_or_down#Move_command][Move command]] - Vim Tips wiki
- [[https://bennetthardwick.com/beginner-advanced-vim-tips/][Beginner Advanced Vim tips]]  - Bennett Hardwick blog post
- [[https://github.com/adrianscheff/wizardly-tips-vim][Wizardly Tips Vim]]  - Adrian Scheff github readme
- [[https://medium.com/hacking-and-gonzo/10-vim-tricks-you-should-know-6393842b3537][10 Vim tricks you should know]]  - Amir Salihefendic blog post
- Best of Vim Tips Wiki:
  - [[https://vim.fandom.com/wiki/Avoid_the_escape_key][Avoid the escape key]]
  - [[https://vim.fandom.com/wiki/Delete_all_lines_containing_a_pattern][Delete all lines containing a pattern]]
  - [[https://vim.fandom.com/wiki/Power_of_g][Power of G]]
  - [[https://vim.fandom.com/wiki/Search_patterns][Search patterns]]
- [[https://medium.com/@kadek/understanding-vims-jump-list-7e1bfc72cdf0][Understanding Vim's jump list]] - Kade Killary blog post
- [[https://rohitpaulk.com/articles/doom-emacs-1][Doom: Jumping to the previous window]] - Paul Kuruvilla blog post
- [[https://hungyi.net/posts/doom-emacs-search-replace-project/][How to do a Project-wide search and replace in Doom]]  - Hung-Yi blog post
- [[https://twitter.com/thewizardlucas/status/1528692254843490304][vim anti-patterns]] - Lucas, The Wizard twitter thread
