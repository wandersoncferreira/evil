#+TITLE: Learning Doom and Vim

- =^= go to the first non-blank character of the line
- =g_= go to the last non-blank character of the line
- =C-r= redo
- =%= go to the corresponding (, [, or {
- =*= go to the next occurrence of the word under the cursor
- =#= go to the previous occurrence of the word under the cursor
- How to center the current line in the screen in Vim?
  - zz, zt, zb
- How to scroll down/up in Vim?
  - ctrl-d, ctrl-u, ctrl-b, ctrl-f
- Try using the Toggle functionality more often to remove or bring up eshell or REPL
- Nice day today! I just learned that pressing =jk= will get me out of INSERT MODE
- =dot= will repeat the last command
- completion works via =c-n= and =c-p=
- =spc sp= to search all files in the current project
- =/= to search within the current buffer. Use `n` and `N` to go to next and
  previous matches. =?= to search backwards.
- =s= and type two characters to jump forward to the nearest match
  - if the things I want to jump to is fairly close to where the cursor is I'll
    use evil-snipe (s and S). If it's far away or in another window, I'll use Avy
    (gs SPC)
- use =c-,= to find next flyspell error
- use =z-== to fix the wrong word at point
- use =c-;= to fix previous wrong word.
- the "dot" command: think if the dot command would repeat your edition correctly
- use the more general text objects (iw rather than w)
- prefer text objects to motions when possible
- visual mode is a smell
- don't use two sentences where one will due
- visual mode breaks repeatability
- custom operators
  - surround
    - change surround <object>: cs
    - add surround: ys
    - delete surround: ds
  - commentary
    - gc <text object>: for example, gcip to comment entire paragraph
  - replace with register: TODO: verify if I want to include this plugin in my conf
- custom text objects
  - indent
    - we can use =ii= to denote the indentation object e.g. gdii will comment all indentation
- <verb> i <noun> is amazing
- =ma= will set a mark in =a= register
- =`a= will jump back to specific place of mark =a=
- ='a= will jump to the beginning of the line of the specific mark =a=


* Resources
- [[https://youtu.be/wlR5gYd6um0][Mastering the Vim Language ]]- Video by thoughtbot
- [[https://stackoverflow.com/questions/1218390/what-is-your-most-productive-shortcut-with-vim][Your problem with Vim is that you don't grok vi]] - StackOverflow answer
