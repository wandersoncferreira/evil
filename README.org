#+TITLE: Emacs Configuration
#+DATE: April 30, 2022
#+AUTHOR: Wanderson Ferreira

My first configuration files using Doom Emacs with Evil mode enabled.

So far, enjoying a lot. I'm documenting all the learning process in the =docs/=
folder. After 10 years of standard Emacs keybindings, this was a big jump and a
great level of frustration for the first two weeks.

Enjoy and be patient if traveling the same waters.

[[file:docs/README.org][Learn more about Doom and Evil]]

* Documentation for the little voice on your shoulder!

One thing I feared the most about Emacs Frameworks was installing lots of
functionality that I'd never know about because I haven't explicitly added them.

This is definitely bothering me on my current Doom instalation, but before going
to the self-degradation "do-it-yourself because I can" route,  let me try
something new.

I will document every aspect of Doom as soon as I discover them, my goal is to
get familiar with what's around.

Therefore, if I am unsure what a package does or if I want to use it or not:
remove it. Only enable packages that I made significant effort to understand
their value proposition.

| Status  | Meaning                                                                     |
|---------+-----------------------------------------------------------------------------|
| ENABLED | package kept, with or without modifications from Doom defaults              |
| REMOVED | package removed, after being assessed and considered not fit to my workflow |
| OFF     | package removed, but under consideration                                    |


** Doom CORE
Doom is basically divided into ~core~ and ~modules~ at a very high level. All
the code in ~core~ are related to sane defaults, Doom's foundation on package
management, projects, and a feel more pieces.

These are some packages of my interest:
- [ENABLED] [[https://github.com/doomemacs/doomemacs/blob/d6d1e600c0b22ce323558002eccdaac6edbcf2b2/core/core-projects.el#L22][projectile]]
- [ENABLED] [[https://github.com/doomemacs/doomemacs/blob/master/core/core-keybinds.el#L214][which-key]]
- [ENABLED] [[https://github.com/doomemacs/doomemacs/blob/master/core/core-editor.el#L713][ws-butler]]
- [ENABLED] [[https://github.com/doomemacs/doomemacs/blob/master/core/core-editor.el#L585][smartparens]]
- [REMOVED] [[https://github.com/doomemacs/doomemacs/blob/master/core/core-ui.el#L481][highlight-numbers]]
- [REMOVED] [[https://github.com/doomemacs/doomemacs/blob/master/core/core-ui.el#L438][all-the-icons]]
- [REMOVED] [[https://github.com/doomemacs/doomemacs/blob/master/core/core-editor.el#L527][helpful]]
- [REMOVED] restart-emacs
- [OFF] [[https://github.com/doomemacs/doomemacs/blob/master/core/core-editor.el#L429][better-jumper]]

** Doom MODULES
I'll follow the order from ~init.el~ file.

*** company
Only company is installed. Victory! The defaults are nice.

*** STARTED vertico
Packages that I'm interesting in keeping & learning:
- [ENABLED] [[https://github.com/minad/vertico][vertico]]
  - also enabled ~vertico-multiform-mode~ for project-wide searches
- [ENABLED] [[https://github.com/oantolin/orderless][orderless]]
  - It is possible to live without orderless and configuring ~completion-styles~ option to consider ~partial-completion~ and ~flex~, however ~orderless~ is a lot faster than this option. Let's keep it around.
  - Amazing! I learned how to use ~orderless~ in company completion UI. As ~SPC~ takes us out of completion, let's use ~&~ as the separator.
- [ENABLED] consult
  - First, without ~consult~ my project search via ~SPC /~ was broken inside a Clojure project :( seems good reason to enabled it for now.
- [OFF] consult-dir
- [OFF] consult-flycheck
- [OFF] embark
- [OFF] embark-consult
- [OFF] consult-dir
- [OFF] wgrep
- [REMOVED] marginalia

*** doom
Nothing here to see.
- [REMOVED] doom-themes
- [REMOVED] solaire-mode

*** TODO popup
Very amazing package developed by Doom team. I'm very interested in digging
deeper here. Taming popup has been one of my worst skills in Emacs.

I enabled ~+all~ special buffers to be handled as popups. Very optimistic about this.

*** TODO vc-gutter
*** TODO hl-todo
*** TODO workspaces
*** STARTED evil
Module responsible for bringing Vim over to the party.

- [ENABLED] evil
- [OFF] evil-args
- [OFF] evil-easymotion
- [OFF] evil-embrace
- [ENABLED] evil-escape
- [OFF] evil-exchange
- [OFF] evil-indent-plus
- [OFF] evil-lion
- [OFF] evil-nerd-commenter
- [OFF] evil-numbers
- [OFF] evil-snipe
- [OFF] evil-surround
- [OFF] evil-textobj-anyblock
- [OFF] evil-traces
- [OFF] evil-visualstar
- [OFF] exato
- [OFF] evil-quick-diff
- [ENABLED] evil-collection

*** TODO file-templates
*** TODO multiple-cursors
*** TODO snippets
*** TODO dired
*** TODO electric
*** TODO vc
*** TODO eshell
*** TODO syntax
*** TODO eval
*** TODO lookup
*** TODO lsp
*** TODO magit
*** TODO macos
*** TODO clojure
*** TODO emacs-lisp
*** TODO latex
*** TODO markdown
*** TODO org
*** TODO plantuml
*** TODO ledger
