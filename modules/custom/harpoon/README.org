#+TITLE:   custom/harpoon
#+DATE:    July 30, 2022
#+STARTUP: inlineimages nofold

* Table of Contents :TOC_3:noexport:

* Description
Custom implementation of [[https://github.com/ThePrimeagen/harpoon][Harpoon]] Vim Plugin.

Usually when we are coding some functionality there are few important files we
care about. Perhaps 1, 2, 3, or 5. Idk. Usually less than 5, but we jump to a lot
of auxiliary files to lookup something, to check assumptions, or whatnot, then
we want to get back to one of our important files.

This is how harpoon works:
- by project
- set harpoon
  - 1 to 5 important files using ~SPC + h + {!, @, #, $, %}~
  - notice the symbols are hold SHIFT + 1 to 5
- jump to harpoon
  - using ~SPC + h + {1, 2, 3, 4, 5}~

Note:
The way I use Doom Emacs each project belongs to a single Workspace, therefore
it is common to me to have many projects opened at once. The Hack described
below makes sure that the harpoon keys are going to point to the correct
locations if I switch project or switch workspaces. 

** Interactive functions
| name                  | description                                  |
|-----------------------+----------------------------------------------|
| harpoon/clean-project | clean all harpoons in the project            |
| harpoon/delete        | interactively choose a harpoon to be deleted |
| harpoon/quick-menu    | interactively choose a harpoon to jump to    |

* Plugins
- [[https://codeberg.org/ideasman42/emacs-bookmark-in-project][bookmark-in-project]] 
  
* Features
- The same quick access keys to individual projects
  - the code dynamically loads the correct harpoon that will be triggered by
    your quick access keys when you change projects
- Update the harpoon position to your last edit in the buffer
  - the update is triggered when you switch buffer or save the buffer
    
* Hack
Everything here is a hack! what isn't? however, there is a interesting mechanism
to reset/restore keybindings pointing to your pre-defined harpoons *per
project*.

This code is a best effort to accomodate for changes via
~projectile-switch-project~ or ~+workspaces-switch-to~ (which uses
persp-frame-switch under the cover).
